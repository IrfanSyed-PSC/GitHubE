# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, windows-2016]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1
      
      - name: Setup VSTest Path
        uses: darenm/Setup-VSTest@v1
      
      - name: Restore all nuget packages for the solution
        run: nuget restore SampleApp.sln
      
      - name: Build SampleApp solution
        run: msbuild SampleApp.sln
      
      - name: Run all Unit Tests for SampleApp
        run: vstest.console.exe SampleApp.Test\bin\Debug\SampleApp.Test.dll Algorithms.Test\bin\Debug\Algorithms.Test.dll DataStructures.Test\bin\Debug\DataStructures.Test.dll /Parallel /EnableCodeCoverage

      - name: Create nuget package for SampleApp
        run: nuget pack SampleApp 
      
      - name: Publish Nuget to GitHub registry
        run: dotnet nuget push ./<project>/out/*.nupkg -k ${GITHUB_TOKEN} -s https://nuget.pkg.github.com/IrfanSyed-PSC/index.json --skip-duplicate --no-symbols true
        env:
          GITHUB_TOKEN: af64b6e0c76c7b31da6f667a61f36dd02b551b15
