# This is a basic workflow to help you get started with Actions

name: Code Coverage

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1
      
      - name: Setup VSTest Path
        uses: darenm/Setup-VSTest@v1
      
      - name: Install dotcover
        uses: crazy-max/ghaction-chocolatey@v1.4.0
        with:
           args: install dotcover
           
      - name: dotcover help
        run: C:\ProgramData\chocolatey\bin\dotCover.exe
            
      - name: Restore all nuget packages for the solution
        run: nuget restore SampleApp.sln
      
      - name: Build SampleApp solution
        run: msbuild SampleApp.sln
     
      - name: Run coverage
        run: | 
              $files=Get-ChildItem .\GitHubE -recurse -force -filter "*.Test.dll" | Get-Unique
              
              $testlist="";
              foreach ($file in $files)
              { 
                $testlist+=$file.FullName + " ";
              }
              
              $dotcoverExe=Get-Command dotCover.exe
              $vstestExe=Get-Command vstest.console.exe 
              echo "executing $vstestExe on $dotcoverExe"
              Start-Process $dotcoverExe.Source -ArgumentList "analyze,--TargetExecutable,$vstestExec.Source,--TargetArguments,$testlist,--TargetWorkingDir,$PWD"
